#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define all1(x) begin(x) + 1, end(x)
#define int long long
using namespace std;
using pi = pair<int, int>;

vector<int> z_func(const string& s)
{
	// z[i] = length of longest matching prefix of s[0..] and s[i..]
	vector<int> z(s.size());
	z[0] = s.size();
	int l = 0, r = 0; // [l,r)
	for (int i = 1; i < s.size(); i++) {
		if (i < r) z[i] = min(r - i, z[i - l]);
		while (i + z[i] < s.size() && s[z[i]] == s[i + z[i]]) {
			z[i]++;
		}
		if (i + z[i] > r) {
			l = i;
			r = i + z[i];
		}
	}
	return z;
}

void solve()
{
	string a, b;
	cin >> a >> b;
	int n = a.size();
	string s = a + "$" + b;
	auto z = z_func(s);
	vector<pi> ans(n);
	for (int i = n + 1; i < s.size(); i++) ans[i - n - 1].first = z[i];
	reverse(all(a));
	reverse(all(b));
	string s2 = a + "$" + b;
	auto z2 = z_func(s2);
	for (int i = n + 1; i < s.size(); i++) ans[n - 1 - (i - n - 1)].second = z2[i];
	int realans = 0;
	if (a == b) realans++;
	// for (int i = 0; i < n; i++) {

	// 	cout << ans[i].first << ' ' << ans[i].second << '\n';
	// }
	for (int i = 1; i < n; i++) {
		if (ans[i].first >= n - i && ans[i - 1].second >= i) realans++;
	}
	cout << realans;
}

signed main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	solve();
}