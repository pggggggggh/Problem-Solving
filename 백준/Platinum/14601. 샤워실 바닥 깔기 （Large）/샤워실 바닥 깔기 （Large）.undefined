#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define all1(x) begin(x) + 1, end(x)
#define int long long
using namespace std;
using pi = pair<int, int>;

int n, xx, yy;
int a[300][300];
int color = 1;
int dx[4] = { 0, 0, 1, 1 }, dy[4] = { 0, 1, 0, 1 };

void make(int x, int y, int sz, int hole)
{
	if (xx >= x && xx < x + sz) {
		if (yy >= y && yy < y + sz) hole = 0;
		else if (yy >= y && yy < y + 2 * sz) hole = 1;
	} else if (xx >= x && xx < x + 2 * sz) {
		if (yy >= y && yy < y + sz) hole = 2;
		else if (yy >= y && yy < y + 2 * sz) hole = 3;
	}

	if (sz == 1) {
		for (int i = 0; i < 4; i++) {
			if (i == hole) continue;
			a[x + dx[i]][y + dy[i]] = color;
		}
		color++;
		return;
	}
	for (int i = 0; i < 4; i++) {
		if (i == hole) continue;
		// cout << x << ' ' << y << ' ' << sz << ' ' << hole << "->" << x + sz * dx[i] << ' ' << y + sz * dy[i] << ' ' << sz / 2 << ' ' << 3 - i << '\n';
		make(x + sz * dx[i], y + sz * dy[i], sz / 2, 3 - i);
	}
	make(x + sz / 2, y + sz / 2, sz / 2, hole);
	make(x + sz * dx[hole], y + sz * dy[hole], sz / 2, 0);
}

void solve()
{
	cin >> n >> xx >> yy;
	a[xx][yy] = -1;
	make(1, 1, pow(2, n - 1), 0);
	// for (int i = 1; i <= pow(2, n); i++) {
	// 	for (int j = 1; j <= pow(2, n); j++) cout << a[i][j] << ' ';
	// 	cout << '\n';
	// }

	for (int i = pow(2, n); i >= 1; i--) {
		for (int j = 1; j <= pow(2, n); j++) cout << a[j][i] << ' ';
		cout << '\n';
	}
}

signed main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	solve();
}