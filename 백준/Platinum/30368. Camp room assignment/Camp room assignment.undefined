#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define int long long
using namespace std;
using pi = pair<int, int>;

const int MOD = 998'244'353;

int mexp(int x, int y)
{
	int res = 1;
	while (y) {
		if (y & 1) res = (res * x) % MOD;
		x = (x * x) % MOD;
		y >>= 1;
	}
	return res;
}

void solve()
{
	vector<int> fact(1000005);
	fact[0] = 1;
	for (int i = 1; i <= 1000000; i++) fact[i] = fact[i - 1] * i % MOD;
	auto comb = [&](int n, int r) {
		int res = fact[n];
		res = res * mexp(fact[r], MOD - 2) % MOD;
		res = res * mexp(fact[n - r], MOD - 2) % MOD;
		return res;
	};
	int m;
	cin >> m;
	vector<int> dp(m + 1);
	dp[1] = 1;
	for (int n = 1; n < m; n++) {
		int a = (dp[n] + comb(2 * n, n) * mexp(m - 1, n) % MOD) % MOD;
		int b = dp[n] * 2 * (m - 1) % MOD;
		int c = (m - 1) * (m - 1) % MOD
		    * ((dp[n] - comb(2 * n, n - 1) * mexp(m - 1, n - 1) % MOD + MOD) % MOD) % MOD;
		dp[n + 1] = (a + b + c) % MOD;
	}
	for (int n = 1; n <= m; n++) cout << (mexp(m, 2 * n) - m * dp[n] % MOD + MOD) % MOD << '\n';
}

signed main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	solve();
}