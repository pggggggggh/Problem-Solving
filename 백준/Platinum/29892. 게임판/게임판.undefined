#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define all1(x) begin(x) + 1, end(x)
#define int long long
using namespace std;
using pi = pair<int, int>;

char a[505][505];

void solve()
{
	int n, m, k;
	cin >> n >> m >> k;
	k = (k + 1) / 2;
	vector<vector<array<int, 4>>> event(n + 1);
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			cin >> a[i][j];
			if (a[i][j] != '.') {
				event[max(i - k + 1, 1LL)].push_back({ i, j, a[i][j] - '0', 1 });
				if (i + k <= n) event[i + k].push_back({ i, j, a[i][j] - '0', -1 });
			}
		}
	}
	set<array<int, 3>> now;
	int ans = 1e18;
	for (int i = 1; i <= n; i++) {
		for (auto& [x, y, num, o] : event[i]) {
			if (o == 1) now.insert({ x, y, num });
			else now.erase({ x, y, num });
		}
		vector<vector<int>> aevent(3, vector<int>(m + 2)), bevent(3, vector<int>(m + 2));
		for (auto& [x, y, num] : now) {
			int s = max(y - k + 1, 1LL), e = min(y + k, m + 1);
			aevent[num][s] += -1;
			bevent[num][s] += y + abs(i - x);
			aevent[num][y] += 2;
			bevent[num][y] += -2 * y;
			aevent[num][e] += -1;
			bevent[num][e] += y - abs(i - x);
		}
		int a1 = 0, b1 = 0, a2 = 0, b2 = 0;
		int aans = 0, bans = 0;
		for (int j = 1; j <= m; j++) {
			a1 += aevent[1][j], a2 += aevent[2][j];
			b1 += bevent[1][j], b2 += bevent[2][j];
			aans = a1 * j + b1, bans = a2 * j + b2;
			if (i >= k && i <= n - k + 1 && j >= k && j <= m - k + 1) {
				ans = min(ans, abs(aans - bans));
			}
		}
	}

	cout << ans;
}

signed main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	solve();
}